package dgrs

import "github.com/bwmarrin/discordgo"

// IState defines the endpoints of the State instance.
type IState interface {
	SetChannel(channel *discordgo.Channel) (err error)
	Channel(id string) (v *discordgo.Channel, err error)
	Channels(guildID string, forceFetch ...bool) (v []*discordgo.Channel, err error)
	RemoveChannel(id string, dehydrate ...bool) (err error)
	SetEmoji(guildID string, emoji *discordgo.Emoji) (err error)
	Emoji(guildID, emojiID string) (v *discordgo.Emoji, err error)
	Emojis(guildID string, forceFetch ...bool) (v []*discordgo.Emoji, err error)
	RemoveEmoji(guildID, emojiID string) (err error)
	Publish(channel string, payload interface{}) (err error)
	Subscribe(channel string, handler func(scan func(v interface{}) error)) (close func() error)
	SubscribeDMs(handler func(e *DirectMessageEvent)) (close func() error)
	SetGuild(guild *discordgo.Guild) (err error)
	Guild(id string, hydrate ...bool) (v *discordgo.Guild, err error)
	Guilds() (v []*discordgo.Guild, err error)
	RemoveGuild(id string, dehydrate ...bool) (err error)
	SetMember(guildID string, member *discordgo.Member) (err error)
	Member(guildID, memberID string, forceNoFetch ...bool) (v *discordgo.Member, err error)
	Members(guildID string, forceFetch ...bool) (v []*discordgo.Member, err error)
	MembersLimit(guildID, afterID string, limit int, forceFetch ...bool) (v []*discordgo.Member, err error)
	RemoveMember(guildID, memberID string) (err error)
	SetMessage(message *discordgo.Message) (err error)
	Message(channelID, messageID string) (v *discordgo.Message, err error)
	Messages(channelID string, forceFetch ...bool) (v []*discordgo.Message, err error)
	RemoveMessage(channelID, messageID string) (err error)
	SetPresence(guildID string, presence *discordgo.Presence) (err error)
	Presence(guildID, userID string) (v *discordgo.Presence, err error)
	Presences(guildID string) (v []*discordgo.Presence, err error)
	RemovePresence(guildID, userID string) (err error)
	SetRole(guildID string, role *discordgo.Role) (err error)
	Role(guildID, roleID string) (v *discordgo.Role, err error)
	Roles(guildID string, forceFetch ...bool) (v []*discordgo.Role, err error)
	RemoveRole(guildID, roleID string) (err error)
	Shards(pool int) (shards []*Shard, err error)
	ReserveShard(pool int, cid ...int) (id int, err error)
	ReleaseShard(pool, id int) (err error)
	Flush(subKeys ...string) (err error)
	SetUser(user *discordgo.User) (err error)
	User(id string) (v *discordgo.User, err error)
	Users() (v []*discordgo.User, err error)
	RemoveUser(id string) (err error)
	SelfUser() (v *discordgo.User, err error)
	SetSelfUser(user *discordgo.User) (err error)
	UserGuilds(id string) (res []string, err error)
	SetVoiceState(guildID string, vs *discordgo.VoiceState) (err error)
	VoiceState(guildID, userID string) (v *discordgo.VoiceState, err error)
	VoiceStates(guildID string) (v []*discordgo.VoiceState, err error)
	RemoveVoiceState(guildID, userID string) (err error)
}
